plugins {
  id 'java'
  id 'maven-publish'
  id "com.github.node-gradle.node" version "7.1.0"
  id 'com.enonic.xp.app' version '3.5.2'
  id 'no.item.xp.codegen' version '2.6.3'
}

app {
  name = "${appName}"
  displayName = "${appDisplayName}"
  vendorName = "${vendorName}"
  vendorUrl = "${vendorUrl}"
  systemVersion = "${xpVersion}"
}

dependencies {
  include "com.enonic.xp:lib-common:${xpVersion}"
  include "com.enonic.xp:lib-content:${xpVersion}"
  include "com.enonic.xp:lib-context:${xpVersion}"
  include "com.enonic.xp:lib-event:${xpVersion}"
  include "com.enonic.xp:lib-i18n:${xpVersion}"
  include "com.enonic.xp:lib-repo:${xpVersion}"
  include 'com.enonic.lib:lib-cron:1.1.2'
  include 'com.enonic.lib:lib-http-client:3.2.2'
}

repositories {
  mavenLocal()
  mavenCentral()
  xp.enonicRepo()
  maven { url "https://repo.itemtest.no/releases" }
  maven { url 'https://jitpack.io' }
}

node {
  download = true
  version = '22.12.0'
}

tasks.withType(Copy).configureEach {
  includeEmptyDirs = false
}

tasks.register("dev", NpmTask) {
  args = [
    "run",
    "watch"
  ]
  dependsOn npmInstall, deploy
  environment = [
    "FORCE_COLOR": "true",
  ]
}

tasks.register("npmCheck", NpmTask) {
  dependsOn npmInstall
  args = [
    "run",
    "check"
  ]
  environment = [
    "FORCE_COLOR": "true",
  ]
}

// If you ALWAYS want to SKIP `test` and `check` tasks on development build, wrap this inside an 'if...'
// if (!(project.hasProperty('dev') || project.hasProperty('development'))) {
check.dependsOn npmCheck
// }

tasks.register("npmBuild", NpmTask) {
  args = [
    "run",
    "--silent",
    project.hasProperty("dev") || project.hasProperty("development") ? "build" : "minify"
  ]
  dependsOn npmInstall
  dependsOn generateTypeScript
  environment = [
    "FORCE_COLOR": "true",
    "LOG_LEVEL_FROM_GRADLE": gradle.startParameter.logLevel.toString(),
    "NODE_ENV": project.hasProperty("dev") || project.hasProperty("development") ? "development" : "production"
  ]
  inputs.dir "src/main/resources"
  outputs.dir "build/resources/main"
}

processResources {
  include '**/*'
  exclude '**/tsconfig.*.json'
  exclude '**/*.ts'
  includeEmptyDirs false
}


jar.dependsOn npmBuild

publishing {
  repositories {
    maven {
      name = "itemtestRepository"
      url = "https://repo.itemtest.no/releases"
      credentials(PasswordCredentials)
      authentication {
        basic(BasicAuthentication)
      }
    }
  }
  publications {
    maven(MavenPublication) {
      from components.java
      groupId group
      artifactId projectName
      version version
    }
  }
}
